<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.daina.mapper.MonthlyCarMapper">
    <resultMap id="BaseResultMap" type="com.example.daina.entity.MonthlyCar">
        <id column="monthly_car_id" jdbcType="VARCHAR" property="monthlyCarId"/>
        <result column="monthly_id" jdbcType="VARCHAR" property="monthlyId"/>
        <result column="parkinglot_id" jdbcType="VARCHAR" property="parkingLotId"/>
        <result column="car_license" jdbcType="VARCHAR" property="carLicense"/>
        <result column="start_date" jdbcType="INTEGER" property="startDate"/>
        <result column="end_date" jdbcType="VARCHAR" property="endDate"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
    </resultMap>
    <resultMap id="returnMap" type="java.util.HashMap">
        <id column="monthly_car_id" jdbcType="VARCHAR" property="monthlyCarId"/>
        <result column="monthly_id" jdbcType="VARCHAR" property="monthlyId"/>
        <result column="parkinglot_id" jdbcType="VARCHAR" property="parkingLotId"/>
        <result column="car_license" jdbcType="VARCHAR" property="carLicense"/>
        <result column="start_date" jdbcType="INTEGER" property="startDate"/>
        <result column="end_date" jdbcType="VARCHAR" property="endDate"/>
    </resultMap>
    <select id="getMonthlyCarListByPage" resultMap="returnMap">
        SELECT *
        FROM park_monthly_car
        WHERE monthly_id = #{monthlyId} AND
              car_license LIKE CONCAT('%', #{searchInfo}, '%')
    </select>
    <select id="getMonthlyCarList" resultMap="BaseResultMap">
        SELECT *
        FROM park_monthly_car
        WHERE monthly_id = #{monthlyId}
    </select>
    <select id="getMonthlyCarCount" resultType="Integer">
        SELECT COUNT(*)
        FROM park_monthly_car
        WHERE monthly_id = #{monthlyId} AND
              car_license LIKE CONCAT('%', #{searchInfo}, '%')
    </select>
    <insert id="addMonthlyCar">
        <selectKey keyProperty="monthlyCarId" resultType="String" order="BEFORE">
            SELECT replace(uuid(),'-','') AS monthlyCarId
        </selectKey>
        INSERT INTO park_monthly_car(monthly_car_id, monthly_id,parkinglot_id, car_license, start_date, end_date)
        VALUES (#{monthlyCarId}, #{monthlyId},#{parkingLotId}, #{carLicense}, #{startDate}, #{endDate})
    </insert>
    <update id="updateMonthlyCar">
        UPDATE park_monthly_car
        SET car_license = #{carLicense}, start_date = #{startDate}, end_date = #{endDate}
        WHERE monthly_car_id = #{monthlyCarId}
    </update>
    <update id="updateMonthlyCarList" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            UPDATE park_monthly_car
            <set>
                end_date=#{item.endDate}
            </set>
            <where>
                monthly_car_id = #{item.monthlyCarId}
            </where>
        </foreach>
    </update>
    <select id="getIsUsedMonthlyCarLicense" resultType="Integer">
        SELECT COUNT(*)
        FROM park_monthly_car
        WHERE car_license = #{carLicense} AND parkinglot_id = #{parkingLotId}
    </select>
    <delete id="deleteMonthlyCarById">
        DELETE FROM park_monthly_car
        WHERE monthly_car_id = #{monthlyCarId}
    </delete>
    <delete id="deleteMonthlyCarByMonthlyId">
        DELETE FROM park_monthly_car
        WHERE monthly_id = #{monthlyId}
    </delete>
    <select id="getCarLicense" parameterType="java.util.Map" resultType="java.lang.String">
        SELECT GROUP_CONCAT(car_license) AS carLicense
        FROM (SELECT car_license
        FROM park_monthly_car
        WHERE monthly_id = #{monthlyId}
        ORDER BY car_license
        limit 0,4) as car_license
    </select>
    <update id="updateParkMonthlyList" parameterType="java.util.Map">
        UPDATE park_monthly
        SET
        car_license=#{carLicense}
        WHERE
        monthly_id=#{monthlyId};
    </update>
</mapper>